name: Build APK and AAB

on:
  push:
    branches: [ main ]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
    # 1) ─────────────────────────── Código ────────────────────────────────
    - name: Checkout
      uses: actions/checkout@v3
      with: { fetch-depth: 1 }

    # 2) ───── FFmpeg (solo 1ª vez) + re‑encode de relax60s.mp3 ────────────
    - name: Ensure FFmpeg
      run: |
        command -v ffmpeg >/dev/null || { sudo apt-get update -qq && sudo apt-get install -y ffmpeg; }
    - name: Re‑encode MP3 (128 kbps CBR)
      run: |
        test -f assets/audio/relax60s.mp3 || { echo "❌ Falta relax60s.mp3"; exit 1; }
        ffmpeg -y -i assets/audio/relax60s.mp3 -codec:a libmp3lame -b:a 128k /tmp/relax.mp3
        mv /tmp/relax.mp3 assets/audio/relax60s.mp3

    # 3) ─────────────── Flutter SDK + Android SDK (con caché) ─────────────
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable                # 3.22.x
        cache: true                    # ⬅️ activa caché propia de la acción

    # 4) ───────────── CMake 3.22.1 (se cachea la carpeta completa) ────────
    - name: Restore CMake 3.22.1 cache
      id: cmake-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.ANDROID_SDK_ROOT }}/cmake/3.22.1
        key:  ${{ runner.os }}-cmake-3.22.1

    - name: Install CMake 3.22.1 (first run only)
      if: steps.cmake-cache.outputs.cache-hit != 'true'
      run: |
        echo "→ Instalando CMake 3.22.1 en ${ANDROID_SDK_ROOT}"
        # Añadimos el nuevo sdkmanager al PATH para evitar la ruta obsoleta /tools/bin
        export PATH="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:$PATH"
        yes | sdkmanager "cmake;3.22.1" > /dev/null

    # 5) ─────────────────────────── Cachés Pub / Gradle ───────────────────
    - name: Restore Pub cache
      uses: actions/cache@v4
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: ${{ runner.os }}-pub-

    - name: Restore Gradle cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    # 6) ──────────────── Dependencias + chequeos rápidos de código ─────────
    - run: flutter pub get
    - run: dart run flutter_launcher_icons
    - run: dart fix --apply
    - run: dart format --output=none .
    - run: flutter analyze --no-pub --no-fatal-warnings --no-fatal-infos
    - run: flutter test

    # 7) ───────────────────────────── Keystore ─────────────────────────────
    - name: Decode keystore
      run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/undiamas.jks

    - name: Create key.properties
      run: |
        cat > android/key.properties <<EOF
        storePassword=${{ secrets.STORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=undiamas.jks
        EOF

    # 8) ─────────────────────── Build APK + AAB (sin config‑cache) ─────────
    - name: Build release AAB
      run: |
        export GRADLE_OPTS="$GRADLE_OPTS -Dorg.gradle.configuration-cache=false"
        flutter build appbundle --release

    - name: Build release APK
      run: |
        export GRADLE_OPTS="$GRADLE_OPTS -Dorg.gradle.configuration-cache=false"
        flutter build apk --release

    # 9) ─────────────── Subir artefactos y mapping.txt a GitHub ────────────
    - name: Upload R8 mapping
      uses: actions/upload-artifact@v4
      with:
        name: r8-mapping
        path: build/app/outputs/mapping/release/mapping.txt

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: undiamas-apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: undiamas-aab
        path: build/app/outputs/bundle/release/app-release.aab

    # 10) ───────────────────────── Guardar cachés ⤵️ ───────────────────────
    - name: Save Pub cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}

    - name: Save Gradle cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    - name: Save CMake cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ${{ env.ANDROID_SDK_ROOT }}/cmake/3.22.1
        key:  ${{ runner.os }}-cmake-3.22.1
