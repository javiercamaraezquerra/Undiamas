plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"      // siempre el último
}

import java.util.Properties
import java.io.FileInputStream

/* ── Firma segura ─────────────────────────────────────────────── */
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace  = "com.example.undiamas"
    compileSdk = flutter.compileSdkVersion        // 34 con Flutter 3.22
    ndkVersion = flutter.ndkVersion

    /* ── Java 17 + desugaring ── */
    compileOptions {
        sourceCompatibility       = JavaVersion.VERSION_17
        targetCompatibility       = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId = "com.example.undiamas"
        minSdk       = flutter.minSdkVersion
        targetSdk    = flutter.targetSdkVersion
        versionCode  = flutter.versionCode
        versionName  = flutter.versionName
    }

    signingConfigs {
        release {
            storeFile     file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias      keystoreProperties['keyAlias']
            keyPassword   keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig   signingConfigs.release
            minifyEnabled   true
            shrinkResources true

            /* ── R8 / ProGuard ──
               • archivo por defecto optimizado
               • reglas propias (keep de flutter_local_notifications + Gson) */
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                          'proguard-rules.pro'
        }
        debug {
            // keystore debug por defecto
        }
    }
}

flutter {
    source = "../.."
}

/* ── Dependencias extra ───────────────────────────────────────── */
dependencies {
    // Librería necesaria para core desugaring (Java 8+ back‑port)
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}
